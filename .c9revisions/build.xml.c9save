{"ts":1383253619525,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<project name=\"CakePHP\" default=\"build\">\n\t<!--\n\tBuild.xml file for CakePHP\n\n\tUses phing to create releases, and pear packages.\n\tBased off of build.xml in doctrine.\n\n\tRequires the d51PearPkg2 to be installed:\n\n\tpear channel-discover pear.domain51.com\n\tpear install domain51/Phing_d51PearPkg2Task\n\n\tUse the `release` task to update VERSION.txt, and create a new tag.\n\tUse the `build` task to create a pear package based on the current working copy.\n\tUse the `clean` task to clean up packaging artifacts.\n\n\t-->\n\n\t<taskdef classname=\"phing.tasks.ext.d51PearPkg2Task\" name=\"d51pearpkg2\" />\n\t<property file=\"build.properties\" />\n\n\t<!--\n\t\tThe set of files we're going to package\n\t\tExclude the cli scripts, as they get installed separately.\n\t -->\n\t<fileset id=\"libs\" dir=\"./lib/Cake\">\n\t\t<include name=\"**\" />\n\t\t<exclude name=\"Console/cake.bat\" />\n\t\t<exclude name=\"Console/cake.php\" />\n\t\t<exclude name=\"Console/cake\" />\n\t</fileset>\n\n\t<!--\n\t\tCLI scripts to package and install\n\t-->\n\t<fileset id=\"cli\" dir=\"./lib/Cake/Console\">\n\t\t<include name=\"cake.bat\" />\n\t\t<include name=\"cake.php\" />\n\t\t<include name=\"cake\" />\n\t</fileset>\n\n\n\t<!-- start fresh each time.  Remove the dist and build dirs -->\n\t<target name=\"clean\">\n\t\t<delete dir=\"${build.dir}\" includeemptydirs=\"true\" />\n\t\t<delete dir=\"${dist.dir}\" includeemptydirs=\"true\" />\n\t</target>\n\n\t<!-- Read the current version, so we can replace it -->\n\t<target name=\"current-version\">\n\t\t<exec executable=\"php\" outputProperty=\"version\">\n\t\t\t<arg value=\"-r\" />\n\t\t\t<arg value=\"$fh = file('./lib/Cake/VERSION.txt'); echo array_pop($fh);\" />\n\t\t</exec>\n\t</target>\n\n\t<!-- Makes directories and sets properties -->\n\t<target name=\"prepare\" depends=\"current-version\">\n\t\t<!-- set PEAR stability based on version number. -->\n\t\t<condition property=\"pear.stability\" value=\"beta\">\n\t\t\t<contains string=\"${version}\" substring=\"beta\" casesensitive=\"false\"/>\n\t\t</condition>\n\t\t<condition property=\"pear.stability\" value=\"alpha\">\n\t\t\t<contains string=\"${version}\" substring=\"alpha\" casesensitive=\"false\"/>\n\t\t</condition>\n\t\t<condition property=\"pear.stability\" value=\"devel\">\n\t\t\t<contains string=\"${version}\" substring=\"dev\" casesensitive=\"false\"/>\n\t\t</condition>\n\t\t<condition property=\"pear.stability\" value=\"beta\">\n\t\t\t<contains string=\"${version}\" substring=\"rc\" casesensitive=\"false\" />\n\t\t</condition>\n\t\t<condition property=\"pear.stability\" value=\"stable\">\n\t\t\t<not><isset property=\"pear.stability\"/></not>\n\t\t</condition>\n\n\t\t<!-- pear versions need to not have '-' -->\n\t\t<exec executable=\"php\" outputProperty=\"pear.version\">\n\t\t\t<arg value=\"-r\" />\n\t\t\t<arg value=\"echo str_replace(array('-'), array(''), '${version}');\" />\n\t\t</exec>\n\n\t\t<!-- Used for other targets -->\n\t\t<property name=\"pear.package\" value=\"${project.name}-${pear.version}\" />\n\n\t\t<echo msg=\"Preparing package of ${version} (${pear.version}+${pear.stability})\" />\n\n\t\t<!-- Get the current git branch -->\n\t\t<exec command=\"git name-rev HEAD 2>/dev/null | awk '{ print $2 }'\" outputProperty=\"git.branch\" />\n\t</target>\n\n\t<!--\n\t\tCopy all the files to build/ so they can be packaged up.\n\t-->\n\t<target name=\"copy-files\" depends=\"clean,prepare\">\n\t\t<echo msg=\"Creating build + dist directories.\" />\n\t\t<mkdir dir=\"${build.dir}\" />\n\t\t<mkdir dir=\"${dist.dir}\" />\n\n\t\t<echo msg=\"Copying files to build directory\" />\n\t\t<copy todir=\"${build.dir}/${pear.package}/Cake\">\n\t\t\t<fileset refid=\"libs\" />\n\t\t</copy>\n\t\t<copy todir=\"${build.dir}/${pear.package}/bin\">\n\t\t\t<fileset refid=\"cli\" />\n\t\t</copy>\n\t</target>\n\n\t<!--\n\t\tDefine the package.xml.  Using xml to make xml is fun!\n\t-->\n\t<target name=\"define-pear-package\" depends=\"copy-files\">\n\t\t<d51pearpkg2 baseinstalldir=\"/\" dir=\"${build.dir}/${pear.package}\">\n\t\t\t<name>CakePHP</name>\n\t\t\t<summary>CakePHP Rapid Development Framework</summary>\n\t\t\t<channel>pear.cakephp.org</channel>\n\t\t\t<description>CakePHP is an application development framework for PHP 5.2+</description>\n\n\t\t\t<lead user=\"mark_story\" name=\"Mark Story\" email=\"mark@mark-story.com\" />\n\t\t\t<lead user=\"lorenzo\" name=\"José Lorenzo Rodríguez\" email=\"jose.zap@gmail.com\" />\n\t\t\t<lead user=\"PhpNut\" name=\"Larry Masters\" email=\"phpnut@cakephp.org\" />\n\t\t\t<developer user=\"ADmad\" name=\"Adnan Sarela\" email=\"admad.coder@gmail.com\" />\n\t\t\t<developer user=\"AD7six\" name=\"Andy Dawson\" email=\"andydawson76@gmail.com\" />\n\t\t\t<developer user=\"Ceeram\" name=\"Marc Ypes\" email=\"c33ram@gmail.com\" />\n\t\t\t<developer user=\"jrbasso\" name=\"Juan Basso\" email=\"\" />\n\t\t\t<developer user=\"Predominant\" name=\"Graham Weldon\" email=\"graham@grahamweldon.com\" />\n\t\t\t<developer user=\"renan.saddam\" name=\"Renan Gonçalves\" email=\"renan.saddam@gmail.com\" />\n\t\t\t<developer user=\"rchavik\" name=\"Rachman Chavik\" email=\"rchavik@xintesa.com\" />\n\n\t\t\t<license>MIT License</license>\n\t\t\t<version release=\"${pear.version}\" api=\"${pear.version}\" />\n\t\t\t<stability release=\"${pear.stability}\" api=\"${pear.stability}\" />\n\t\t\t<notes>http://github.com/cakephp/cakephp/blob/master/README</notes>\n\t\t\t<dependencies>\n\t\t\t\t<php minimum_version=\"5.2.8\" />\n\t\t\t\t<pear minimum_version=\"1.9.0\" recommended_version=\"1.9.4\" />\n\t\t\t\t<package name=\"PHPUnit\" channel=\"pear.phpunit.de\" minimum_version=\"3.5.0\" type=\"optional\" />\n\t\t\t</dependencies>\n\t\t\t<dirroles key=\"bin\">script</dirroles>\n\t\t\t<dirroles key=\"Cake/Test\">php</dirroles>\n\t\t\t<dirroles key=\"Cake/Console/Templates/skel\">php</dirroles>\n\t\t\t<dirroles key=\"Cake/Console/Templates/default\">php</dirroles>\n\t\t\t<dirroles key=\"Cake/View\">php</dirroles>\n\t\t\t<release>\n\t\t\t\t<install as=\"cake\" name=\"bin/cake\" />\n\t\t\t\t<install as=\"cake.php\" name=\"bin/cake.php\" />\n\t\t\t\t<install as=\"cake.bat\" name=\"bin/cake.bat\" />\n\t\t\t</release>\n\t\t\t<exceptions key=\"Cake/VERSION.txt\">php</exceptions>\n\t\t\t<exceptions key=\"Cake/LICENSE.txt\">php</exceptions>\n\t\t</d51pearpkg2>\n\t</target>\n\n\t<!-- Generate the PEAR package from a directory and move the files to the dist folder -->\n\t<target name=\"generate-package\" depends=\"define-pear-package\">\n\t\t<exec command=\"pear package\" dir=\"${build.dir}/${pear.package}\" passthru=\"true\"/>\n\t\t<echo msg=\"Moving ${pear.package}.tgz\"/>\n\t\t<move file=\"${build.dir}/${pear.package}/${pear.package}.tgz\" todir=\"${dist.dir}\" />\n\t</target>\n\n\t<!--\n\t\tBump the version number and commit that.\n\t-->\n\t<target name=\"next-version\" depends=\"current-version\">\n\t\t<echo msg=\"Incrementing version.\" />\n\t\t<propertyprompt propertyName=\"release_version\" defaultValue=\"${version}\" promptText=\"Enter version to be released.\"/>\n\t\t<echo msg=\"$file = file_get_contents('./lib/Cake/VERSION.txt'); $file = str_replace('${version}', '${release_version}', $file); file_put_contents('./lib/Cake/VERSION.txt', $file);\" />\n\t\t<exec executable=\"php\">\n\t\t\t<arg value=\"-r\" />\n\t\t\t<arg value=\"$file = file_get_contents('./lib/Cake/VERSION.txt'); $file = str_replace('${version}', '${release_version}', $file); file_put_contents('./lib/Cake/VERSION.txt', $file);\" />\n\t\t</exec>\n\t\t<echo msg=\"Version number updated.\" />\n\t\t<property name=\"version\" value=\"${release_version}\" override=\"true\" />\n\t</target>\n\n\t<!--\n\t\tCreate the release commit that updates the version number and pushes the commits.\n\t-->\n\t<target name=\"release-commit\" depends=\"next-version,prepare\">\n\t\t<echo msg=\"Creating new release commit\" />\n\t\t<exec command=\"git add ./lib/Cake/VERSION.txt\" logoutput=\"true\" checkreturn=\"true\" />\n\t\t<exec command=\"git commit -m 'Update version number to ${release_version}'\" logoutput=\"true\" checkreturn=\"true\" />\n\t\t<exec command=\"git tag -s ${release_version} -m 'CakePHP ${release_version}'\" logoutput=\"true\" checkreturn=\"true\" />\n\n\t\t<propertyprompt propertyName=\"shipit\" defaultValue=\"n\" promptText=\"Ship the new commit and tag?\" />\n\t\t<condition property=\"noshipit\" value=\"1\">\n\t\t\t<equals arg1=\"n\" arg2=\"${shipit}\" casesensitive=\"false\" />\n\t\t</condition>\n\t\t<fail if=\"noshipit\" msg=\"You said not to ship it.\" />\n\n\t\t<echo msg=\"Pushing commit and tag.\" />\n\t\t<exec command=\"git push ${git.remote} ${git.branch}\" logoutput=\"true\" checkreturn=\"true\" />\n\t\t<exec command=\"git push ${git.remote} ${release_version}\" logoutput=\"true\" checkreturn=\"true\" />\n\t\t<echo msg=\"Push complete.\" />\n\t</target>\n\n\t<!--\n\t\tUpload to pirum pear channel.\n\t-->\n\t<target name=\"distribute\" depends=\"prepare\" description=\"Upload pear packages to pear.cakephp.org\">\n\t\t<echo msg=\"Uploading tgz file to cakephp.org\" />\n\t\t<exec command=\"scp ${dist.dir}/${pear.package}.tgz cakephp@cakephp.org:${pirum.dir}\" dir=\".\" checkreturn=\"true\"  />\n\n\t\t<echo msg=\"Adding new release to pirum\" />\n\t\t<exec command=\"ssh cakephp@cakephp.org pirum add ${pirum.dir} ${pirum.dir}/${pear.package}.tgz\" checkreturn=\"true\" />\n\t</target>\n\n\t<!--\n\t\tTop level easy to type targets\n\t-->\n\t<target name=\"build\" depends=\"generate-package\" description=\"Generate a pear package\" />\n\t<target name=\"release\" depends=\"release-commit,build,distribute\" description=\"Release a new version of CakePHP\" />\n\n</project>\n"]],"start1":0,"start2":0,"length1":0,"length2":8784}]],"length":8784}
